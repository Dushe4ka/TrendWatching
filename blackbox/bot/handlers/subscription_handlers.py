from aiogram import Dispatcher, types
from aiogram.fsm.context import FSMContext
from bot.states.states import SubscriptionStates
from bot.utils.misc import get_subscription_id_and_type
from database import (
    get_user_subscription,
    update_user_subscription,
    create_subscription,
    get_categories
)
from bot.keyboards.inline_keyboards import get_subscription_keyboard

async def menu_subscription_callback(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏"""
    subscription_id, subscription_type = get_subscription_id_and_type(callback_query)
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
    categories = get_categories()
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user_subs = get_user_subscription(subscription_id, subscription_type)["categories"]
    keyboard = get_subscription_keyboard(categories, user_subs)
    await callback_query.message.edit_text(
        "üîî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç:\n‚ùóÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–π–¥–∂–µ—Å—Ç–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ —Å 14:00 –¥–æ 15:00‚ùóÔ∏è\n\n‚úÖ - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:",
        reply_markup=keyboard
    )

async def toggle_subscription_callback(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    subscription_id, subscription_type = get_subscription_id_and_type(callback_query)
    cat = callback_query.data.replace("toggle_sub_", "")
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_subs = get_user_subscription(subscription_id, subscription_type)["categories"]
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    if cat in user_subs:
        user_subs.remove(cat)
    else:
        user_subs.append(cat)
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
    update_user_subscription(subscription_id, subscription_type, user_subs)
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
    categories = get_categories()
    keyboard = get_subscription_keyboard(categories, user_subs)
    await callback_query.message.edit_text(
        "üîî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç:\n‚ùóÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–π–¥–∂–µ—Å—Ç–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ —Å 14:00 –¥–æ 15:00‚ùóÔ∏è\n\n‚úÖ - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:",
        reply_markup=keyboard
    )

async def process_subscription_category(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    category = message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–æ–¥–ø–∏—Å–∫—É
    subscription_id, subscription_type = get_subscription_id_and_type(message)
    subscription = get_user_subscription(subscription_id, subscription_type)
    
    if subscription:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–æ–¥–ø–∏—Å–∫—É
        categories = subscription.get('categories', [])
        if category in categories:
            categories.remove(category)
            await message.answer(f"‚úÖ –û—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {category}")
        else:
            categories.append(category)
            await message.answer(f"‚úÖ –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {category}")
        
        update_user_subscription(subscription_id, subscription_type, categories)
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É —Å –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
        if create_subscription(subscription_id, subscription_type, [category]):
            await message.answer(f"‚úÖ –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {category}")
        else:
            await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏")
    
    await state.clear()
    await message.answer(
        "–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.",
        reply_markup=types.ReplyKeyboardRemove()
    )

def register_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫"""
    dp.callback_query.register(menu_subscription_callback, lambda c: c.data == "menu_subscriptions")
    dp.callback_query.register(toggle_subscription_callback, lambda c: c.data.startswith("toggle_sub_"))
    dp.message.register(process_subscription_category, SubscriptionStates.waiting_for_category) 