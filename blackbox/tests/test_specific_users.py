#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_specific_users():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 80)
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_usernames = [
        "SHIFYuu",
        "Lavkaaa_helper"
    ]
    
    try:
        from role_model.lark_provider import LarkUserProvider
        from config import get_role_system_config
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        role_config = get_role_system_config()
        lark_config = role_config["lark"]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä
        user_provider = LarkUserProvider(
            app_id=lark_config["app_id"],
            app_secret=lark_config["app_secret"],
            table_app_id=lark_config["table_app_id"],
            table_id=lark_config["table_id"]
        )
        
        print("‚úÖ LarkUserProvider —Å–æ–∑–¥–∞–Ω")
        print()
        
        for username in test_usernames:
            print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{username}")
            print("-" * 60)
            
            # –®–∞–≥ 1: –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
            print(f"1Ô∏è‚É£ –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} –≤ —Å–∏—Å—Ç–µ–º–µ...")
            user_doc = await user_provider.get_user_by_username_from_lark(username)
            
            if not user_doc:
                print(f"‚ùå –û–®–ò–ë–ö–ê: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                print(f"   –ü—Ä–∏—á–∏–Ω–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users_lark")
                print(f"   –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Lark Base –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é")
                print()
                continue
            
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
            print(f"   üìã –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
            print(f"      - Username: {user_doc.get('username', 'N/A')}")
            print(f"      - –ò–º—è: {user_doc.get('employee_name', 'N/A')}")
            print(f"      - –†–æ–ª—å: {user_doc.get('role', 'N/A')}")
            print(f"      - –°—Ç–∞—Ç—É—Å: {user_doc.get('status', 'N/A')}")
            print(f"      - –°—Ç–∞—Ç—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {user_doc.get('employee_status', 'N/A')}")
            print()
            
            # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
            print(f"2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è @{username}...")
            access_granted, error_message = await user_provider.check_user_access(username)
            
            if access_granted:
                print(f"‚úÖ –î–û–°–¢–£–ü –†–ê–ó–†–ï–®–ï–ù –¥–ª—è @{username}")
                print(f"   üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞")
            else:
                print(f"‚ùå –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù –¥–ª—è @{username}")
                print(f"   üö´ –ü—Ä–∏—á–∏–Ω–∞: {error_message}")
                
                # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏
                print(f"   üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                employee_status = user_doc.get('employee_status', '')
                if employee_status != '–†–∞–±–æ—Ç–∞–µ—Ç':
                    print(f"      ‚ùå –°—Ç–∞—Ç—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: '{employee_status}' (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å '–†–∞–±–æ—Ç–∞–µ—Ç')")
                else:
                    print(f"      ‚úÖ –°—Ç–∞—Ç—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: '{employee_status}' - –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏
                role = user_doc.get('role', '')
                if role == '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞':
                    print(f"      ‚ùå –†–æ–ª—å: '{role}' (—Ä–æ–ª—å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞)")
                else:
                    print(f"      ‚úÖ –†–æ–ª—å: '{role}' - –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–æ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
                    from role_model.mongodb_provider import MongoDBRoleProvider
                    role_provider = MongoDBRoleProvider()
                    role_exists = await role_provider.role_exists(role)
                    
                    if role_exists:
                        print(f"      ‚úÖ –†–æ–ª—å '{role}' –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —Ä–æ–ª–µ–π")
                    else:
                        print(f"      ‚ùå –†–æ–ª—å '{role}' –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —Ä–æ–ª–µ–π")
                        print(f"         –†–µ—à–µ–Ω–∏–µ: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–ª—å '{role}' –≤ –±–æ—Ç–µ")
            
            print()
            print("=" * 80)
            print()
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


async def test_admin_access():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    print("üëë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
    print("=" * 80)
    
    try:
        from bot.utils.misc import is_admin, check_user_access
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        admin_ids_str = os.getenv("ADMIN_ID")
        if admin_ids_str:
            admin_ids = [int(admin_id.strip()) for admin_id in admin_ids_str.split(',') if admin_id.strip().isdigit()]
            print(f"üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–∑ ADMIN_ID: {admin_ids}")
            
            for admin_id in admin_ids:
                print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ID: {admin_id}")
                print("-" * 40)
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ is_admin
                is_admin_user = await is_admin(admin_id)
                print(f"   is_admin({admin_id}): {'‚úÖ –î–∞' if is_admin_user else '‚ùå –ù–µ—Ç'}")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ check_user_access
                access_granted, message, role = await check_user_access(admin_id, None)  # –î–ª—è –∞–¥–º–∏–Ω–æ–≤ username –Ω–µ –Ω—É–∂–µ–Ω
                print(f"   check_user_access({admin_id}): {'‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω'}")
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
                print(f"   –†–æ–ª—å: {role}")
        else:
            print("‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 80)
    
    await test_specific_users()
    await test_admin_access()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 