#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_dynamic_keyboards():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üîç –¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 60)
    
    try:
        from bot.keyboards.inline_keyboards import get_dynamic_main_menu_keyboard, get_admin_main_menu_keyboard
        from role_model.mongodb_provider import MongoDBRoleProvider
        from bot.utils.misc import is_admin_from_env
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Ä–æ–ª–µ–π
        role_provider = MongoDBRoleProvider()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–æ–ª–∏ –∏–∑ –±–∞–∑—ã
        print("üìã –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        roles = await role_provider.get_all_roles()
        
        if not roles:
            print("‚ùå –†–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(roles)} —Ä–æ–ª–µ–π:")
        for role in roles:
            print(f"   üè∑Ô∏è {role.name}: {role.description}")
        
        print("\n" + "=" * 60)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
        for role in roles:
            print(f"\nüéØ –¢–µ—Å—Ç —Ä–æ–ª–∏ '{role.name}':")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {role.description}")
            print(f"   –ü—Ä–∞–≤–∞: {role.permissions}")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏
            keyboard = get_dynamic_main_menu_keyboard(role.permissions)
            
            print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:")
            for i, row in enumerate(keyboard.inline_keyboard):
                for j, button in enumerate(row):
                    print(f"     [{i}][{j}]: {button.text} -> {button.callback_data}")
        
        print("\n" + "=" * 60)
        
        # –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        print(f"\nüîß –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        admin_keyboard = get_admin_main_menu_keyboard()
        print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        for i, row in enumerate(admin_keyboard.inline_keyboard):
            for j, button in enumerate(row):
                print(f"     [{i}][{j}]: {button.text} -> {button.callback_data}")
        
        print("\n" + "=" * 60)
        
        # –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
        print(f"\n‚ùå –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏:")
        empty_permissions = {
            "can_access_sources": False,
            "can_access_analysis": False,
            "can_access_subscriptions": False,
            "can_manage_roles": False,
            "can_manage_users": False,
            "can_manage_telegram_auth": False
        }
        empty_keyboard = get_dynamic_main_menu_keyboard(empty_permissions)
        print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–µ–∑ –ø—Ä–∞–≤:")
        for i, row in enumerate(empty_keyboard.inline_keyboard):
            for j, button in enumerate(row):
                print(f"     [{i}][{j}]: {button.text} -> {button.callback_data}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def test_user_access_simulation():
    """–°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("\nüë• –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 60)
    
    try:
        from bot.utils.misc import is_admin_from_env
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        test_users = [
            {"id": 1395854084, "username": "admin_user", "role": "admin"},
            {"id": 5032415442, "username": "SHIFYuu", "role": "tester"},
            {"id": 123456789, "username": "analyst_user", "role": "analyst"},
            {"id": 987654321, "username": "viewer_user", "role": "viewer"},
            {"id": 555666777, "username": "no_role_user", "role": None}
        ]
        
        for user in test_users:
            print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user['username']} (ID: {user['id']})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            is_admin = is_admin_from_env(user['id'])
            if is_admin:
                print(f"   üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (ADMIN_ID) - –ø–æ–ª–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞")
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
            if user['role']:
                print(f"   üè∑Ô∏è –†–æ–ª—å: {user['role']}")
                
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∞ —Ä–æ–ª–∏
                from role_model.mongodb_provider import MongoDBRoleProvider
                role_provider = MongoDBRoleProvider()
                role_permissions = await role_provider.get_role_permissions(user['role'])
                
                if role_permissions:
                    print(f"   ‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞–π–¥–µ–Ω—ã: {role_permissions.permissions}")
                    
                    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    from bot.keyboards.inline_keyboards import get_dynamic_main_menu_keyboard
                    keyboard = get_dynamic_main_menu_keyboard(role_permissions.permissions)
                    
                    print(f"   üì± –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:")
                    for i, row in enumerate(keyboard.inline_keyboard):
                        for j, button in enumerate(row):
                            print(f"     [{i}][{j}]: {button.text}")
                else:
                    print(f"   ‚ùå –†–æ–ª—å '{user['role']}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ")
            else:
                print(f"   ‚ö†Ô∏è –†–æ–ª—å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")
                
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–µ–∑ –ø—Ä–∞–≤
                from bot.keyboards.inline_keyboards import get_dynamic_main_menu_keyboard
                empty_permissions = {
                    "can_access_sources": False,
                    "can_access_analysis": False,
                    "can_access_subscriptions": False,
                    "can_manage_roles": False,
                    "can_manage_users": False,
                    "can_manage_telegram_auth": False
                }
                keyboard = get_dynamic_main_menu_keyboard(empty_permissions)
                
                print(f"   üì± –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–±–µ–∑ –ø—Ä–∞–≤):")
                for i, row in enumerate(keyboard.inline_keyboard):
                    for j, button in enumerate(row):
                        print(f"     [{i}][{j}]: {button.text}")
        
        print("\n‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä")
    print("=" * 60)
    
    await test_dynamic_keyboards()
    await test_user_access_simulation()
    
    print("\nüèÅ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã")


if __name__ == "__main__":
    asyncio.run(main()) 