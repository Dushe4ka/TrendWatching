#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å username
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_final_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å username")
    print("=" * 60)
    
    try:
        from bot.utils.misc import get_role_manager_async
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–µ–≤–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä
        role_manager = await get_role_manager_async()
        if not role_manager:
            print("‚ùå RoleManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        print("‚úÖ RoleManager –ø–æ–ª—É—á–µ–Ω")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @SHIFYuu
        username = "SHIFYuu"
        user_id = 5032415442  # –§–∏–∫—Ç–∏–≤–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–∞
        
        print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}")
        print("-" * 50)
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
        print(f"1Ô∏è‚É£ –¢–µ—Å—Ç check_user_access...")
        access_granted, message = await role_manager.check_user_access(username)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        print(f"2Ô∏è‚É£ –¢–µ—Å—Ç get_user_permissions_by_username...")
        permissions = await role_manager.get_user_permissions_by_username(username)
        print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: {permissions}")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        print(f"3Ô∏è‚É£ –¢–µ—Å—Ç check_permission...")
        has_permission = await role_manager.check_permission(user_id, "can_use_analysis", username)
        print(f"   can_use_analysis: {'‚úÖ –ï–°–¢–¨' if has_permission else '‚ùå –ù–ï–¢'}")
        
        has_permission = await role_manager.check_permission(user_id, "can_manage_sources", username)
        print(f"   can_manage_sources: {'‚úÖ –ï–°–¢–¨' if has_permission else '‚ùå –ù–ï–¢'}")
        
        has_permission = await role_manager.check_permission(user_id, "can_receive_digest", username)
        print(f"   can_receive_digest: {'‚úÖ –ï–°–¢–¨' if has_permission else '‚ùå –ù–ï–¢'}")
        
        print()
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        print(f"4Ô∏è‚É£ –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @test_user")
        print("-" * 50)
        
        fake_username = "test_user"
        fake_user_id = 123456789
        
        access_granted, message = await role_manager.check_user_access(fake_username)
        print(f"   –î–æ—Å—Ç—É–ø: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        
        permissions = await role_manager.get_user_permissions_by_username(fake_username)
        print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: {permissions}")
        
        has_permission = await role_manager.check_permission(fake_user_id, "can_use_analysis", fake_username)
        print(f"   can_use_analysis: {'‚úÖ –ï–°–¢–¨' if has_permission else '‚ùå –ù–ï–¢'}")
        
        print()
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "–£–≤–æ–ª–µ–Ω"
        print(f"5Ô∏è‚É£ –¢–µ—Å—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @Lavkaaa_helper (—Å—Ç–∞—Ç—É—Å '–£–≤–æ–ª–µ–Ω')")
        print("-" * 50)
        
        fired_username = "Lavkaaa_helper"
        fired_user_id = 5032415442  # –¢–æ—Ç –∂–µ ID –¥–ª—è —Ç–µ—Å—Ç–∞
        
        access_granted, message = await role_manager.check_user_access(fired_username)
        print(f"   –î–æ—Å—Ç—É–ø: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        
        permissions = await role_manager.get_user_permissions_by_username(fired_username)
        print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: {permissions}")
        
        has_permission = await role_manager.check_permission(fired_user_id, "can_use_analysis", fired_username)
        print(f"   can_use_analysis: {'‚úÖ –ï–°–¢–¨' if has_permission else '‚ùå –ù–ï–¢'}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 60)
    
    await test_final_system()
    
    print("\nüèÅ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 