#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_admin_permissions_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤"""
    print("üîç –¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤")
    print("=" * 50)
    
    try:
        from bot.utils.misc import has_admin_permissions, is_admin_from_env
        from role_model.mongodb_provider import MongoDBRoleProvider
        from role_model.role_manager import RoleManager
        from role_model.lark_provider import LarkUserProvider
        import os
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
        role_provider = MongoDBRoleProvider()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LarkUserProvider —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        app_id = os.getenv("LARK_APP_ID")
        app_secret = os.getenv("LARK_APP_SECRET")
        table_app_id = os.getenv("LARK_TABLE_APP_ID")
        table_id = os.getenv("LARK_TABLE_ID")
        
        user_provider = LarkUserProvider(app_id, app_secret, table_app_id, table_id)
        role_manager = RoleManager(user_provider, role_provider)
        
        print("‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ ADMIN_ID
        print(f"\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ ADMIN_ID...")
        admin_ids_str = os.getenv("ADMIN_ID", "")
        if admin_ids_str:
            admin_ids = [int(admin_id.strip()) for admin_id in admin_ids_str.split(',') if admin_id.strip().isdigit()]
            for admin_id in admin_ids:
                has_perms = await has_admin_permissions(admin_id)
                print(f"   üîß –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {admin_id} (ADMIN_ID): {has_perms}")
        else:
            print(f"   ‚ö†Ô∏è ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
        print(f"\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...")
        test_user_id = 5032415442  # @SHIFYuu
        test_username = "SHIFYuu"
        
        has_perms = await has_admin_permissions(test_user_id, test_username)
        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{test_username} (ID: {test_user_id}): {has_perms}")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{test_username}...")
        user_permissions = await role_manager.get_user_permissions_by_username(test_username)
        print(f"   üìã –ü—Ä–∞–≤–∞: {user_permissions}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞
        admin_permissions = [
            "can_manage_roles",
            "can_manage_users", 
            "can_manage_telegram_auth"
        ]
        
        for perm in admin_permissions:
            has_perm = user_permissions.get(perm, False)
            status = "‚úÖ" if has_perm else "‚ùå"
            print(f"   {status} {perm}: {has_perm}")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ tester
        print(f"\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ tester...")
        tester_permissions = await role_provider.get_role_permissions("tester")
        if tester_permissions:
            print(f"   üè∑Ô∏è –ü—Ä–∞–≤–∞ —Ä–æ–ª–∏ tester: {tester_permissions.permissions}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –≤ —Ä–æ–ª–∏
            for perm in admin_permissions:
                has_perm = tester_permissions.permissions.get(perm, False)
                status = "‚úÖ" if has_perm else "‚ùå"
                print(f"   {status} {perm}: {has_perm}")
        else:
            print(f"   ‚ùå –†–æ–ª—å tester –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –†–µ–∑—é–º–µ:")
        print("   - –°–∏—Å—Ç–µ–º–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –ª–∏–±–æ ADMIN_ID, –ª–∏–±–æ –ø—Ä–∞–≤–∞ —Ä–æ–ª–∏")
        print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø—Ä–∞–≤–∞–º–∏ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω—Å–∫–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤")
    print("=" * 50)
    
    await test_admin_permissions_system()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 