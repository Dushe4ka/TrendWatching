#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_admin_logic_fix():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("üîç –¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("=" * 60)
    
    try:
        from bot.utils.misc import is_admin_from_env, get_user_info
        from bot.keyboards.inline_keyboards import get_user_main_menu_keyboard, get_admin_main_menu_keyboard
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        admin_ids_str = os.getenv("ADMIN_ID", "")
        if admin_ids_str:
            admin_ids = [int(admin_id.strip()) for admin_id in admin_ids_str.split(',') if admin_id.strip().isdigit()]
            print(f"üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–∑ ADMIN_ID: {admin_ids}")
        else:
            print("‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            admin_ids = []
        
        print()
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ ADMIN_ID
        if admin_ids:
            admin_id = admin_ids[0]
            print(f"1Ô∏è‚É£ –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ ADMIN_ID (ID: {admin_id})...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é is_admin_from_env
            is_admin_user = is_admin_from_env(admin_id)
            print(f"   is_admin_from_env({admin_id}): {'‚úÖ –î–∞' if is_admin_user else '‚ùå –ù–µ—Ç'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            if is_admin_user:
                keyboard = get_admin_main_menu_keyboard()
                print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∞—è (—Å –∫–Ω–æ–ø–∫–∞–º–∏ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ê–¥–º–∏–Ω)")
            else:
                keyboard = get_user_main_menu_keyboard()
                print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –û–±—ã—á–Ω–∞—è (–±–µ–∑ –∫–Ω–æ–ø–æ–∫ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ê–¥–º–∏–Ω)")
        
        print()
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"2Ô∏è‚É£ –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @SHIFYuu...")
        user_id = 5032415442
        username = "SHIFYuu"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é is_admin_from_env
        is_admin_user = is_admin_from_env(user_id)
        print(f"   is_admin_from_env({user_id}): {'‚úÖ –î–∞' if is_admin_user else '‚ùå –ù–µ—Ç'}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = await get_user_info(user_id, username)
        if user_info:
            print(f"   –†–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ: {user_info.role}")
        else:
            print(f"   –†–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ: –ù–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        if is_admin_user:
            keyboard = get_admin_main_menu_keyboard()
            print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∞—è (—Å –∫–Ω–æ–ø–∫–∞–º–∏ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ê–¥–º–∏–Ω)")
        else:
            keyboard = get_user_main_menu_keyboard()
            print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –û–±—ã—á–Ω–∞—è (–±–µ–∑ –∫–Ω–æ–ø–æ–∫ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ê–¥–º–∏–Ω)")
        
        print()
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"3Ô∏è‚É£ –¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @test_user...")
        fake_user_id = 123456789
        fake_username = "test_user"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é is_admin_from_env
        is_admin_user = is_admin_from_env(fake_user_id)
        print(f"   is_admin_from_env({fake_user_id}): {'‚úÖ –î–∞' if is_admin_user else '‚ùå –ù–µ—Ç'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        if is_admin_user:
            keyboard = get_admin_main_menu_keyboard()
            print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∞—è (—Å –∫–Ω–æ–ø–∫–∞–º–∏ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ê–¥–º–∏–Ω)")
        else:
            keyboard = get_user_main_menu_keyboard()
            print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –û–±—ã—á–Ω–∞—è (–±–µ–∑ –∫–Ω–æ–ø–æ–∫ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ê–¥–º–∏–Ω)")
        
        print()
        
        # –¢–µ—Å—Ç 4: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
        print(f"4Ô∏è‚É£ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
        
        user_keyboard = get_user_main_menu_keyboard()
        admin_keyboard = get_admin_main_menu_keyboard()
        
        print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        for i, row in enumerate(user_keyboard.inline_keyboard):
            for j, button in enumerate(row):
                print(f"     [{i}][{j}]: {button.text} -> {button.callback_data}")
        
        print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        for i, row in enumerate(admin_keyboard.inline_keyboard):
            for j, button in enumerate(row):
                print(f"     [{i}][{j}]: {button.text} -> {button.callback_data}")
        
        print()
        
        # –¢–µ—Å—Ç 5: –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        print(f"5Ô∏è‚É£ –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã...")
        print(f"   –ü—Ä–∞–≤–∏–ª–æ: –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º ADMIN_ID, –ø–æ—Ç–æ–º —Ä–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ")
        print(f"   –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ ADMIN_ID -> –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print(f"   –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –≤ ADMIN_ID -> –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print(f"   –†–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ –ù–ï –≤–ª–∏—è–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("=" * 60)
    
    await test_admin_logic_fix()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 