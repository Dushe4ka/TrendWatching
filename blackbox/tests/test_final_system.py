#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_final_system():
    """–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏")
    print("=" * 60)
    
    try:
        from role_model.mongodb_provider import MongoDBRoleProvider
        from role_model.role_manager import RoleManager
        from role_model.lark_provider import LarkUserProvider
        from bot.keyboards.inline_keyboards import get_dynamic_main_menu_keyboard
        import os
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
        role_provider = MongoDBRoleProvider()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LarkUserProvider —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        app_id = os.getenv("LARK_APP_ID")
        app_secret = os.getenv("LARK_APP_SECRET")
        table_app_id = os.getenv("LARK_TABLE_APP_ID")
        table_id = os.getenv("LARK_TABLE_ID")
        
        user_provider = LarkUserProvider(app_id, app_secret, table_app_id, table_id)
        role_manager = RoleManager(user_provider, role_provider)
        
        print("‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ 'tester' —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
        print(f"\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ 'tester' —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏...")
        permissions = await role_provider.get_role_permissions("tester")
        if permissions:
            print(f"   ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã: {permissions.permissions}")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–ª–∏ tester
            keyboard = get_dynamic_main_menu_keyboard(permissions.permissions)
            print(f"   üì± –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è tester:")
            for i, row in enumerate(keyboard.inline_keyboard):
                for j, button in enumerate(row):
                    print(f"     [{i}][{j}]: {button.text} -> {button.callback_data}")
        else:
            print(f"   ‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @SHIFYuu
        print(f"\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @SHIFYuu...")
        access_granted, error_message = await role_manager.check_user_access("SHIFYuu")
        print(f"   ‚úÖ –î–æ—Å—Ç—É–ø: {access_granted}")
        print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {error_message}")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @SHIFYuu
        print(f"\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @SHIFYuu...")
        user_permissions = await role_manager.get_user_permissions_by_username("SHIFYuu")
        print(f"   ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: {user_permissions}")
        
        # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @SHIFYuu
        print(f"\n4Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @SHIFYuu...")
        if user_permissions:
            keyboard = get_dynamic_main_menu_keyboard(user_permissions)
            print(f"   üì± –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è @SHIFYuu:")
            for i, row in enumerate(keyboard.inline_keyboard):
                for j, button in enumerate(row):
                    print(f"     [{i}][{j}]: {button.text} -> {button.callback_data}")
        else:
            print(f"   ‚ùå –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ä–æ–ª–µ–π
        print(f"\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ä–æ–ª–µ–π...")
        all_roles = await role_provider.get_all_roles()
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(all_roles)} —Ä–æ–ª–µ–π:")
        for role in all_roles:
            print(f"      üè∑Ô∏è {role.role_name}: {role.description}")
            print(f"         –ü—Ä–∞–≤–∞: {role.permissions}")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
            keyboard = get_dynamic_main_menu_keyboard(role.permissions)
            print(f"         –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:")
            for i, row in enumerate(keyboard.inline_keyboard):
                for j, button in enumerate(row):
                    print(f"           [{i}][{j}]: {button.text}")
            print()
        
        print("\n‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –†–µ–∑—é–º–µ:")
        print("   - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏")
        print("   - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @SHIFYuu –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫–∏ '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' –∏ '–ê–Ω–∞–ª–∏–∑'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 60)
    
    await test_final_system()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 