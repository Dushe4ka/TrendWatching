#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ username –∏–∑ Telegram
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_username_processing():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ username"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ username –∏–∑ Telegram")
    print("=" * 80)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã username, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–π—Ç–∏ –∏–∑ Telegram
    test_usernames = [
        "SHIFYuu",           # –û–±—ã—á–Ω—ã–π username
        "@SHIFYuu",          # –° —Å–∏–º–≤–æ–ª–æ–º @
        "shifyuu",           # –í –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
        "@shifyuu",          # –° —Å–∏–º–≤–æ–ª–æ–º @ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
        "SHIFYuu ",          # –° –ø—Ä–æ–±–µ–ª–æ–º –≤ –∫–æ–Ω—Ü–µ
        " SHIFYuu",          # –° –ø—Ä–æ–±–µ–ª–æ–º –≤ –Ω–∞—á–∞–ª–µ
        "@SHIFYuu ",         # –° —Å–∏–º–≤–æ–ª–æ–º @ –∏ –ø—Ä–æ–±–µ–ª–æ–º
        "Lavkaaa_helper",    # –î—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        "@Lavkaaa_helper",   # –° —Å–∏–º–≤–æ–ª–æ–º @
    ]
    
    try:
        from role_model.lark_provider import LarkUserProvider
        from config import get_role_system_config
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        role_config = get_role_system_config()
        lark_config = role_config["lark"]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä
        user_provider = LarkUserProvider(
            app_id=lark_config["app_id"],
            app_secret=lark_config["app_secret"],
            table_app_id=lark_config["table_app_id"],
            table_id=lark_config["table_id"]
        )
        
        print("‚úÖ LarkUserProvider —Å–æ–∑–¥–∞–Ω")
        print()
        
        for username in test_usernames:
            print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ username: '{username}'")
            print("-" * 50)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ username –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ Telegram
            print(f"üì± Username –∏–∑ Telegram: '{username}'")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –æ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ check_user_access
            clean_username = username.lstrip('@')
            print(f"üßπ –û—á–∏—â–µ–Ω–Ω—ã–π username: '{clean_username}'")
            
            # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_doc = await user_provider.get_user_by_username_from_lark(clean_username)
            
            if user_doc:
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:")
                print(f"   - Username –≤ –ë–î: '{user_doc.get('username', 'N/A')}'")
                print(f"   - –ò–º—è: {user_doc.get('employee_name', 'N/A')}")
                print(f"   - –†–æ–ª—å: {user_doc.get('role', 'N/A')}")
                print(f"   - –°—Ç–∞—Ç—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {user_doc.get('employee_status', 'N/A')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
                access_granted, error_message = await user_provider.check_user_access(username)
                print(f"üîê –î–æ—Å—Ç—É–ø: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω'}")
                if not access_granted:
                    print(f"   –ü—Ä–∏—á–∏–Ω–∞: {error_message}")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω")
            
            print()
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


async def test_telegram_message_simulation():
    """–°–∏–º—É–ª—è—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram"""
    print("\nüì± –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram")
    print("=" * 80)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç Message –∏–∑ aiogram
    class MockMessage:
        def __init__(self, user_id: int, username: str):
            self.from_user = MockUser(user_id, username)
    
    class MockUser:
        def __init__(self, user_id: int, username: str):
            self.id = user_id
            self.username = username
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    test_cases = [
        (1395854084, "SHIFYuu"),
        (5032415442, "Lavkaaa_helper"),
        (123456789, "test_user"),
    ]
    
    for user_id, username in test_cases:
        print(f"\nüîç –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id}, username: {username}")
        print("-" * 50)
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫-—Å–æ–æ–±—â–µ–Ω–∏–µ
        message = MockMessage(user_id, username)
        
        print(f"üì± –î–∞–Ω–Ω—ã–µ –∏–∑ Telegram:")
        print(f"   - User ID: {message.from_user.id}")
        print(f"   - Username: '{message.from_user.username}'")
        
        if not message.from_user.username:
            print(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç username")
            continue
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ username –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω
        clean_username = message.from_user.username.lstrip('@')
        print(f"üßπ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π username: '{clean_username}'")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –≤ —Å–∏—Å—Ç–µ–º–µ
        try:
            from role_model.lark_provider import LarkUserProvider
            from config import get_role_system_config
            
            role_config = get_role_system_config()
            lark_config = role_config["lark"]
            
            user_provider = LarkUserProvider(
                app_id=lark_config["app_id"],
                app_secret=lark_config["app_secret"],
                table_app_id=lark_config["table_app_id"],
                table_id=lark_config["table_id"]
            )
            
            user_doc = await user_provider.get_user_by_username_from_lark(clean_username)
            
            if user_doc:
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ:")
                print(f"   - Username –≤ –ë–î: '{user_doc.get('username', 'N/A')}'")
                print(f"   - –°—Ç–∞—Ç—É—Å: {user_doc.get('employee_status', 'N/A')}")
                print(f"   - –†–æ–ª—å: {user_doc.get('role', 'N/A')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
                access_granted, error_message = await user_provider.check_user_access(message.from_user.username)
                print(f"üîê –î–æ—Å—Ç—É–ø: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω'}")
                if not access_granted:
                    print(f"   –ü—Ä–∏—á–∏–Ω–∞: {error_message}")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                print(f"   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print(f"   - Username '{clean_username}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ Lark Base")
                print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω")
                print(f"   - –û—à–∏–±–∫–∞ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–µ (–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ä–µ–≥–∏—Å—Ç—Ä)")
        
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ username")
    print("=" * 80)
    
    await test_username_processing()
    await test_telegram_message_simulation()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 