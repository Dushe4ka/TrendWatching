#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

def test_config():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("1. –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        from config import get_role_system_config
        print("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        role_config = get_role_system_config()
        print(f"   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞: {role_config}")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ü–∏–∏ lark
        print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ü–∏–∏ lark...")
        if "lark" in role_config:
            lark_config = role_config["lark"]
            print(f"   ‚úÖ –°–µ–∫—Ü–∏—è lark –Ω–∞–π–¥–µ–Ω–∞: {lark_config}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            required_fields = ["app_id", "app_secret", "table_app_id", "table_id"]
            for field in required_fields:
                if field in lark_config:
                    value = lark_config[field]
                    print(f"   ‚úÖ {field}: {value}")
                else:
                    print(f"   ‚ùå {field}: –ù–ï –ù–ê–ô–î–ï–ù")
        else:
            print("   ‚ùå –°–µ–∫—Ü–∏—è lark –ù–ï –ù–ê–ô–î–ï–ù–ê")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
        env_vars = {
            "LARK_APP_ID": os.getenv("LARK_APP_ID"),
            "LARK_APP_SECRET": os.getenv("LARK_APP_SECRET"),
            "LARK_TABLE_APP_ID": os.getenv("LARK_TABLE_APP_ID"),
            "LARK_TABLE_ID": os.getenv("LARK_TABLE_ID")
        }
        
        for var_name, var_value in env_vars.items():
            if var_value:
                print(f"   ‚úÖ {var_name}: {var_value}")
            else:
                print(f"   ‚ùå {var_name}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()


def test_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç UserInfo
        print("1. –ò–º–ø–æ—Ä—Ç UserInfo...")
        from role_model.base_provider import UserInfo
        print("   ‚úÖ UserInfo –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç misc
        print("\n2. –ò–º–ø–æ—Ä—Ç misc...")
        from bot.utils.misc import category_to_callback
        print("   ‚úÖ category_to_callback –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç 3: –ò–º–ø–æ—Ä—Ç inline_keyboards
        print("\n3. –ò–º–ø–æ—Ä—Ç inline_keyboards...")
        from bot.keyboards.inline_keyboards import get_main_menu_keyboard
        print("   ‚úÖ get_main_menu_keyboard –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç 4: –ò–º–ø–æ—Ä—Ç callback_utils
        print("\n4. –ò–º–ø–æ—Ä—Ç callback_utils...")
        from bot.utils.callback_utils import create_digest_callback
        print("   ‚úÖ create_digest_callback –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–º–ø–æ—Ä—Ç–æ–≤: {str(e)}")
        import traceback
        traceback.print_exc()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("=" * 80)
    
    test_config()
    test_imports()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    main() 