#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 5032415442
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_user_id_5032415442():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 5032415442"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 5032415442")
    print("=" * 60)
    
    user_id = 5032415442
    
    try:
        from role_model.lark_provider import LarkUserProvider
        from config import get_role_system_config
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        role_config = get_role_system_config()
        lark_config = role_config["lark"]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä
        user_provider = LarkUserProvider(
            app_id=lark_config["app_id"],
            app_secret=lark_config["app_secret"],
            table_app_id=lark_config["table_app_id"],
            table_id=lark_config["table_id"]
        )
        
        print("‚úÖ LarkUserProvider —Å–æ–∑–¥–∞–Ω")
        print()
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º get_user_info
        print(f"1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ get_user_info –¥–ª—è user_id: {user_id}")
        print("-" * 50)
        
        user_info = await user_provider.get_user_info(user_id)
        
        if user_info:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:")
            print(f"   - User ID: {user_info.user_id}")
            print(f"   - Username: @{user_info.telegram_username}")
            print(f"   - –ò–º—è: {user_info.employee_name}")
            print(f"   - –†–æ–ª—å: {user_info.role}")
            print(f"   - –°—Ç–∞—Ç—É—Å: {user_info.employee_status}")
            print(f"   - –ê–∫—Ç–∏–≤–µ–Ω: {user_info.is_active}")
        else:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å user_id {user_id} –ù–ï –Ω–∞–π–¥–µ–Ω")
        
        print()
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        print(f"2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞")
        print("-" * 50)
        
        print(f"üîç –†–∞–∑–º–µ—Ä –∫—ç—à–∞ –ø–æ user_id: {len(user_provider._users_by_id_cache)}")
        print(f"üîç –†–∞–∑–º–µ—Ä –∫—ç—à–∞ –ø–æ username: {len(user_provider._users_cache)}")
        
        if user_id in user_provider._users_by_id_cache:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ –ø–æ user_id")
        else:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ –ø–æ user_id")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 user_id –≤ –∫—ç—à–µ
        user_ids = list(user_provider._users_by_id_cache.keys())[:10]
        print(f"üîç –ü–µ—Ä–≤—ã–µ 10 user_id –≤ –∫—ç—à–µ: {user_ids}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 username –≤ –∫—ç—à–µ
        usernames = list(user_provider._users_cache.keys())[:10]
        print(f"üîç –ü–µ—Ä–≤—ã–µ 10 username –≤ –∫—ç—à–µ: {usernames}")
        
        print()
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º MongoDB
        print(f"3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB")
        print("-" * 50)
        
        from database import db
        
        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users_lark
        user_doc = db.users_lark.find_one({"username": {"$exists": True}})
        
        if user_doc:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –µ—Å—Ç—å –≤ MongoDB")
            print(f"   –ü—Ä–∏–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{user_doc.get('username', 'N/A')}")
            
            # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å role = "tester"
            tester_users = list(db.users_lark.find({"role": "tester"}))
            print(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'tester': {len(tester_users)}")
            
            for i, user in enumerate(tester_users):
                print(f"   {i+1}. @{user.get('username', 'N/A')} - {user.get('employee_name', 'N/A')} - {user.get('employee_status', 'N/A')}")
        else:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ MongoDB")
        
        print()
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ role_manager
        print(f"4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ role_manager")
        print("-" * 50)
        
        from bot.utils.misc import get_role_manager_async
        
        role_manager = await get_role_manager_async()
        if role_manager:
            print(f"‚úÖ RoleManager –ø–æ–ª—É—á–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º get_user_info —á–µ—Ä–µ–∑ role_manager
            user_info_from_manager = await role_manager.get_user_info(user_id)
            
            if user_info_from_manager:
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ role_manager:")
                print(f"   - Username: @{user_info_from_manager.telegram_username}")
                print(f"   - –ò–º—è: {user_info_from_manager.employee_name}")
                print(f"   - –†–æ–ª—å: {user_info_from_manager.role}")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ role_manager")
        else:
            print(f"‚ùå RoleManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 5032415442")
    print("=" * 60)
    
    await test_user_id_5032415442()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 