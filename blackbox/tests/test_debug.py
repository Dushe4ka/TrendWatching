#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–±–∞–≥–∞ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

import asyncio
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_debug_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–±–∞–≥–∞ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–±–∞–≥–∞ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 60)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        print("1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        from main import initialize_role_system
        role_manager = await initialize_role_system()
        
        if not role_manager:
            print("   ‚ùå –†–æ–ª–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return
        
        print("   ‚úÖ –†–æ–ª–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        test_username = "alexdru"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à username
        
        print(f"   üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –¥–ª—è @{test_username}...")
        access_granted, error_message = await role_manager.check_user_access(test_username)
        
        if access_granted:
            print(f"   ‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–ª—è @{test_username}")
        else:
            print(f"   ‚ùå –î–æ—Å—Ç—É–ø –ù–ï —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–ª—è @{test_username}: {error_message}")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...")
        try:
            # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π user_id –¥–ª—è —Ç–µ—Å—Ç–∞
            test_user_id = 123456789
            
            print(f"   üîç –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è user_id: {test_user_id}")
            user_info = await role_manager.get_user_info(test_user_id)
            
            if user_info:
                print(f"   ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–∞–π–¥–µ–Ω–∞:")
                print(f"      ID: {user_info.user_id}")
                print(f"      Username: @{user_info.telegram_username}")
                print(f"      –†–æ–ª—å: {user_info.role}")
            else:
                print(f"   ‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π...")
        try:
            test_user_id = 123456789
            test_permission = "can_use_analysis"
            
            print(f"   üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ '{test_permission}' –¥–ª—è user_id: {test_user_id}")
            has_permission = await role_manager.check_permission(test_user_id, test_permission)
            
            if has_permission:
                print(f"   ‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ï–°–¢–¨ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ '{test_permission}'")
            else:
                print(f"   ‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï–¢ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è '{test_permission}'")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: {e}")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –¥–µ–±–∞–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()


async def test_collection_content():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users_lark"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users_lark")
    print("=" * 60)
    
    try:
        from database import db
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        count = db.users_lark.count_documents({})
        print(f"1. –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users_lark: {count}")
        
        if count > 0:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print("\n2. –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
            users = list(db.users_lark.find({}))
            
            for i, user in enumerate(users, 1):
                print(f"   {i}. Username: @{user.get('username', 'N/A')}")
                print(f"      –ò–º—è: {user.get('employee_name', 'N/A')}")
                print(f"      –†–æ–ª—å: {user.get('role', 'N/A')}")
                print(f"      –°—Ç–∞—Ç—É—Å: {user.get('status', 'N/A')}")
                print(f"      –°—Ç–∞—Ç—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {user.get('employee_status', 'N/A')}")
                print(f"      –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {user.get('synced_at', 'N/A')}")
                print()
        else:
            print("   ‚ùå –ö–æ–ª–ª–µ–∫—Ü–∏—è users_lark –ø—É—Å—Ç–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é roles
        print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ roles:")
        roles_count = db.roles.count_documents({})
        print(f"   –í—Å–µ–≥–æ —Ä–æ–ª–µ–π: {roles_count}")
        
        if roles_count > 0:
            roles = list(db.roles.find({}))
            for i, role in enumerate(roles, 1):
                print(f"   {i}. –†–æ–ª—å: {role.get('role_name', 'N/A')}")
                print(f"      –û–ø–∏—Å–∞–Ω–∏–µ: {role.get('description', 'N/A')}")
                permissions = role.get('permissions', {})
                enabled_permissions = sum(1 for perm, enabled in permissions.items() if enabled)
                print(f"      –†–∞–∑—Ä–µ—à–µ–Ω–∏–π: {len(permissions)}, –≤–∫–ª—é—á–µ–Ω–æ: {enabled_permissions}")
                print()
        
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–ª–ª–µ–∫—Ü–∏–π: {e}")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–µ–±–∞–≥–∞ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã - {datetime.now()}")
    print("=" * 80)
    
    await test_debug_system()
    await test_collection_content()
    
    print(f"\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ - {datetime.now()}")


if __name__ == "__main__":
    asyncio.run(main()) 