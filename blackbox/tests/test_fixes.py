#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def test_mongodb_provider():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MongoDBRoleProvider"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MongoDBRoleProvider")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç MongoDBRoleProvider
        print("1. –ò–º–ø–æ—Ä—Ç MongoDBRoleProvider...")
        from role_model.mongodb_provider import MongoDBRoleProvider
        print("   ‚úÖ MongoDBRoleProvider –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞...")
        provider = MongoDBRoleProvider()
        print("   ‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ ensure_default_roles
        print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ ensure_default_roles...")
        await provider.ensure_default_roles()
        print("   ‚úÖ ensure_default_roles –≤—ã–ø–æ–ª–Ω–µ–Ω")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ role_exists
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ role_exists...")
        exists = await provider.role_exists("admin")
        print(f"   ‚úÖ role_exists('admin'): {exists}")
        
        # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π
        print("\n5. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π...")
        roles = await provider.get_all_roles()
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–æ–ª–µ–π: {len(roles)}")
        for role in roles:
            print(f"      - {role.role_name}: {role.description}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MongoDBRoleProvider –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ MongoDBRoleProvider: {str(e)}")
        import traceback
        traceback.print_exc()


async def test_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç admin_handlers
        print("1. –ò–º–ø–æ—Ä—Ç admin_handlers...")
        from bot.handlers.admin_handlers import cmd_users
        print("   ‚úÖ cmd_users –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç misc
        print("\n2. –ò–º–ø–æ—Ä—Ç misc...")
        from bot.utils.misc import is_admin, check_permission, get_user_info
        print("   ‚úÖ –§—É–Ω–∫—Ü–∏–∏ –∏–∑ misc –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 3: –ò–º–ø–æ—Ä—Ç inline_keyboards
        print("\n3. –ò–º–ø–æ—Ä—Ç inline_keyboards...")
        from bot.keyboards.inline_keyboards import get_admin_keyboard
        print("   ‚úÖ get_admin_keyboard –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–º–ø–æ—Ä—Ç–æ–≤: {str(e)}")
        import traceback
        traceback.print_exc()


async def test_role_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        print("1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        from main import initialize_role_system
        role_manager = await initialize_role_system()
        
        if role_manager:
            print("   ‚úÖ –†–æ–ª–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
            print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞...")
            test_username = "alexdru"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à username
            access_granted, error_message = await role_manager.check_user_access(test_username)
            print(f"   üîç –î–æ—Å—Ç—É–ø –¥–ª—è @{test_username}: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω'}")
            if not access_granted:
                print(f"   üìù –ü—Ä–∏—á–∏–Ω–∞: {error_message}")
        else:
            print("   ‚ùå –†–æ–ª–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: {str(e)}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
    print("=" * 80)
    
    await test_mongodb_provider()
    await test_imports()
    await test_role_system()
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 