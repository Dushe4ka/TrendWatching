#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

async def check_username_in_system():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ username –≤ —Å–∏—Å—Ç–µ–º–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ username –≤ —Å–∏—Å—Ç–µ–º–µ")
    print("=" * 50)
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã username
    possible_usernames = [
        "SHIFYuu",
        "shifyuu", 
        "Shifyuu",
        "SHIFYUU",
        "Lavkaaa_helper",
        "lavkaaa_helper",
        "LavkaaaHelper",
        "alexdru",
        "Alexdru",
        "ALEXDRU"
    ]
    
    try:
        from role_model.lark_provider import LarkUserProvider
        from config import get_role_system_config
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        role_config = get_role_system_config()
        lark_config = role_config["lark"]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä
        user_provider = LarkUserProvider(
            app_id=lark_config["app_id"],
            app_secret=lark_config["app_secret"],
            table_app_id=lark_config["table_app_id"],
            table_id=lark_config["table_id"]
        )
        
        print("‚úÖ LarkUserProvider —Å–æ–∑–¥–∞–Ω")
        print()
        
        found_users = []
        
        for username in possible_usernames:
            print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º: '{username}'")
            
            # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_doc = await user_provider.get_user_by_username_from_lark(username)
            
            if user_doc:
                print(f"‚úÖ –ù–ê–ô–î–ï–ù: '{username}'")
                print(f"   - –ò–º—è: {user_doc.get('employee_name', 'N/A')}")
                print(f"   - –†–æ–ª—å: {user_doc.get('role', 'N/A')}")
                print(f"   - –°—Ç–∞—Ç—É—Å: {user_doc.get('employee_status', 'N/A')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
                access_granted, error_message = await user_provider.check_user_access(username)
                print(f"   - –î–æ—Å—Ç—É–ø: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_granted else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω'}")
                if not access_granted:
                    print(f"   - –ü—Ä–∏—á–∏–Ω–∞: {error_message}")
                
                found_users.append({
                    'username': username,
                    'user_doc': user_doc,
                    'access_granted': access_granted,
                    'error_message': error_message
                })
            else:
                print(f"‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω: '{username}'")
            
            print()
        
        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
        print("üìä –ò–¢–û–ì–ò:")
        print("=" * 50)
        
        if found_users:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(found_users)}")
            for user in found_users:
                status = "‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω" if user['access_granted'] else "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω"
                print(f"   - @{user['username']}: {status}")
                if not user['access_granted']:
                    print(f"     –ü—Ä–∏—á–∏–Ω–∞: {user['error_message']}")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - Username –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã—Ö")
            print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Lark Base")
            print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é tester
        print("\nüîç –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é 'tester':")
        print("-" * 30)
        
        from database import db
        tester_users = db.users_lark.find({"role": "tester"})
        count = 0
        for user in tester_users:
            count += 1
            print(f"   {count}. @{user.get('username', 'N/A')} - {user.get('employee_name', 'N/A')} - {user.get('employee_status', 'N/A')}")
        
        if count == 0:
            print("   –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'tester'")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ username –≤ —Å–∏—Å—Ç–µ–º–µ")
    print("=" * 50)
    
    await check_username_in_system()
    
    print("\nüèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == "__main__":
    asyncio.run(main()) 